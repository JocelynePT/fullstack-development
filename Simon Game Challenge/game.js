var buttonColors = ["red", "blue", "green", "yellow"]; // Array with the possible colors
var gamePattern = []; // Array to save the random colors generated by the code
var userClickedPattern = []; // Array to save the user's choices
var started = false; // Boolean to verify if the game already started (before the game starts, its false)
var level = 0; // Starting value for the level

$(document).keypress(function(){
    //Verifies if the game already started
    if(!started){
        // Changes the Level title when the player passes to 
        $("#level-title").text("Level " + level);
        // Calls nextSequence function
        nextSequence();
        // Changes the started boolean value to true
        started = true;
    }
});

$(".btn").click(function(){
    // Checks which button was clicked by its id
    var userChosenColor = $(this).attr("id");
    // Adds the id into the userClickedPattern array
    userClickedPattern.push(userChosenColor);
    // Plays the sound according to the clicked the button
    playSound(userChosenColor);
    // Animates the pressed button
    animatePress(userChosenColor);
    // It's the index of the last element added to the array
    var lastIndex = userClickedPattern.length - 1;
    // Checks the last element if it was selected correctly or not
    checkAnswer(lastIndex);
});

function checkAnswer(currentLevel){
    // If the last user choice is equal to the last game random color is true...
    if (gamePattern[currentLevel] === userClickedPattern[currentLevel]){
        // And if the length of the userClickedPattern array is equal to the gamePatter array length...
        if (userClickedPattern.length === gamePattern.length){
            // After one second, calls the nextSequence function
            setTimeout(function(){
                nextSequence();
            }, 1000);
        }
    }
    // But if the last user choice is different to the last game random color...
    else{
        // Plays the wrong.mp3 sound
        var audio = new Audio("sounds/wrong.mp3");
        audio.play();

        // Adds the style class "game-over" to change the background to red
        $("body").addClass("game-over");
        // After 200 miliseconds, removes the "game-over" css style class, this will make the background back to normal
        setTimeout(function(){
            $("body").removeClass("game-over");
        }, 200);
        // Changes the title to a message to inform the user that he/she made a wrong choice
        $("h1").text("Game Over, Press Any Key to Restart");

        //Calls a function to start over again
        startOver();
    }
}

function nextSequence(){
    // Empty the userClickedPattern array every new sequence
    userClickedPattern = [];
    // Add by one to the level value each time it's called
    level++;
    // The title is setted with the number of the level
    $("#level-title").text("Level " + level);
    // Returns a random integer from 0 to 3
    var randomNumber = Math.floor(Math.random() * 4);
    // Selects a random color from the array
    var randomChosenColor = buttonColors[randomNumber];
    // Add the random color into the gamePattern array
    gamePattern.push(randomChosenColor);
    // Selects a button with the same id as randomChosenColor and do a flash animation
    $("#" + randomChosenColor).fadeOut(100).fadeIn(100);
    // Plays sound according to the random selected button 
    playSound(randomChosenColor);
}

function playSound(name){
    // Selects an audio according to the selected color and plays it
    var audio = new Audio("sounds/" + name + ".mp3");
    audio.play();
}

function animatePress(currentColor){
    // Adds the class .pressed (check styles.css file), and after 100 miliseconds, removes it 
    $("#" + currentColor).addClass("pressed");
    // After 100 miliseconds, the .pressed class is removed from the clicked button
    setTimeout(function(){
        $("#" + currentColor).removeClass("pressed");
    }, 100)
}

function startOver(){
    // Sets all the values just like at the beginning of the game
    level = 0;
    gamePattern = [];
    started = false;
}

